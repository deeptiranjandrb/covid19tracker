{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid.png","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88360f7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading....';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp\n                        start= {0}\n                        end={confirmed.value} \n                        duration={2.5}\n                        separator=\",\"/>\n                        </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Recoverd</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp\n                        start= {0}\n                        end={recovered.value} \n                        duration={2.5}\n                        separator=\",\"/>\n                        </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)} >\n                <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\n                    <Typography variant=\"h5\">\n                        <CountUp\n                        start= {0}\n                        end={deaths.value} \n                        duration={2.5}\n                        separator=\",\"/>\n                        </Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                    <Typography variant=\"body2\">Number of deaths from  COVID-19</Typography>\n                </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if(country){\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n        \n        return { confirmed, recovered, deaths, lastUpdate };\n\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        console.log(data);\n        const modifiedData = data.map((dailyData) => ({ \n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n            }))\n        return modifiedData;\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try{\n        const  {data: {countries }}= await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    }catch(error){\n        console.log(error);\n    }\n}","import React, {useState, useEffect } from 'react';\nimport {fetchDailyData } from '../../api';\nimport Chart from 'chart.js/auto';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData ] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n\n        }\n        fetchAPI();\n    }, [setDailyData]);\n\n    const lineChart = (\n        dailyData.length ? (<Line \n        data = {{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n                data: dailyData.map(({confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill:true\n            },{\n                data: dailyData.map(({confirmed }) => confirmed),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255,0,0,0.5)',\n                fill:true\n            }],\n        }}\n        />): null\n    );\n    const barChart = (\n        confirmed ? (\n        <Bar \n        data={{\n            labels: ['Infected','Recovered','Deaths'],\n            datasets: [{\n                label: 'People',\n                backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                data: [confirmed.value, recovered.value, deaths.value]\n            }]\n        }}\n        options={{\n            legend:{display: false},\n            title: {display: true, text:`Current state in ${country}`}\n        }}\n        />) : null\n    )\n    return (\n        <div className={styles.container}>\n            {country? barChart:lineChart}\n            </div>\n    )\n}\n\nexport default Charts;","import React,{useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    },[setFetchedCountries]);\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange ={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid.9e5d4fc7.png\";","import React from 'react';\n\n\nimport { Cards, Charts, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/covid.png';\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: ''\n    }\n    async componentDidMount() {\n        const fetchedData  = await fetchData();\n\n        this.setState({data: fetchedData});\n\n        console.log(fetchedData);\n    }\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        console.log(fetchedData);\n        this.setState({data: fetchedData,country: country});\n    }\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Charts data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}